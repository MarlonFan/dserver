---
dependency:
  name: galaxy

driver:
  name: docker
docker:
  containers:
    #- name: ansible-role-zsh-debian-7
    #  image: debian
    #  image_version: 7
    #  volume_mounts:
    #    - ${MOLECULE_APTPROXY_PATH}:/etc/apt/apt.conf.d/00aptproxy

    #- name: ansible-role-zsh-debian-8
    #  image: debian
    #  image_version: 8
    #  volume_mounts:
    #    - ${MOLECULE_APTPROXY_PATH}:/etc/apt/apt.conf.d/00aptproxy

    #- name: ansible-role-zsh-ubuntu-1404
    #  image: ubuntu
    #  image_version: 14.04
    #  volume_mounts:
    #    - ${MOLECULE_APTPROXY_PATH}:/etc/apt/apt.conf.d/00aptproxy

    - name: ansible-role-zsh-ubuntu-1604
      image: ubuntu
      image_version: 16.04
      volume_mounts:
        - ${MOLECULE_APTPROXY_PATH}:/etc/apt/apt.conf.d/00aptproxy

    - name: ansible-role-zsh-centos-7
      image: centos
      image_version: 7

#driver:
#  name: vagrant
#vagrant:
#  platforms:
#    - name: xenial64
#      box: bento/ubuntu-16.04
#  providers:
#    - name: virtualbox
#      type: virtualbox
#  instances:
#    - name: vagrant-01
#      raw_config_args:
#        - "vm.synced_folder '${MOLECULE_APT_CONF_D_PATH}', '/etc/apt/apt.conf.d'"

ansible:
  playbook: tests/playbook.yml
  group_vars:
    all:
      zsh_user: ${MOLECULE_ZSH_USER}
      zsh_antigen_bundles_extras:
        - { name: test/in-list, when: true }
        - { name: test/not-in-list, when: false }
        - { name: test/command-exists, command: zsh }
        - { name: test/command-not-exists, command: not-exists-commanddd }
